# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '*src/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  SolutionName: CG.Sequences.CosmoDb
  SolutionPath: 'src/$(SolutionName)'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    
- task: DotNetCoreCLI@2
  displayName: "dotnet test"
  inputs:
    command: 'test'
    projects: '$(SolutionPath).sln'
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
    publishTestResults: true
    nobuild: true

- task: PublishCodeCoverageResults@1
  displayName: "publish coverage"
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'src/**/coverage.cobertura.xml'
    pathToSources: '$(SolutionPath)'
    
- powershell: |
    choco install docfx -y
    if ($lastexitcode -ne 0) {
      throw ("Error installing docfx")
    }
  displayName: "Install docfx"

- powershell: |
    docfx docfx/docfx.json
    if ($lastexitcode -ne 0) {
      throw ("Error generating document")
    }
  displayName: "Generate docs"

- powershell: | 
    $env:GIT_REDIRECT_STDERR = '2>&1'
    git config --global credential.helper store
    Add-Content "$HOME\.git-credentials" "https://$(GIT_PAT):x-oauth-basic@github.com`n"
    git config --global user.email $(OP_USER_EMAIL)
    git config --global user.name $(OP_USER)
    git clone https://github.com/CodeGator/CG.Sequences.CosmoDb.git -b gh-pages origin_site -q
    Copy-Item origin_site/.git _site -recurse
    CD _site
    git add -A
    git commit -m "CI Updates [skip ci]" -q
    git push origin gh-pages -q
  displayName: "Publish docs"  
  
- task: DotNetCoreCLI@2
  displayName: "dotnet pack"
  inputs:
    command: 'pack'
    arguments: '--configuration $(BuildConfiguration)'    
    packagesToPack: '$(SolutionPath).sln'
    nobuild: true
    versioningScheme: 'off'

- task: NuGetCommand@2
  displayName: 'nuget external push'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NUGET.ORG'
    versioningScheme: 'off'
    allowPackageConflicts: true 
    arguments: -SkipDuplicate  